{
	"info": {
		"_postman_id": "48614197-7cb7-4924-8b6c-2c5de8af3d9c",
		"name": "HW_1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20720203"
	},
	"item": [
		{
			"name": "Autotests",
			"item": [
				{
					"name": "first_response",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{ip_port}}/first",
							"host": [
								"{{ip_port}}"
							],
							"path": [
								"first"
							]
						}
					},
					"response": []
				},
				{
					"name": "user_info_3tests",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//забрать данные из реквеста \r",
									"let req_f=request.data;\r",
									"//забрать данные из респонса \r",
									"let resp_f = pm.response.json();\r",
									"//достать из реквеста значение age\r",
									"let req_age= + req_f.age \r",
									"//достать из респонса значение age\r",
									"let resp_age= + resp_f.age \r",
									"\r",
									"let req_name = req_f.name\r",
									"let resp_name =  resp_f.name\r",
									"\r",
									"let req_salary= + req_f.salary\r",
									"let resp_salary= +resp_f.salary\r",
									"let resp_salary_1_5_year= +resp_f.family.u_salary_1_5_year\r",
									"\r",
									"//console.log(\"u_salary_1_5_year=\" +resp_salary_1_5_year) \r",
									"//console.log(req_f)\r",
									"//console.log(\"req_age=\" +req_age)\r",
									"//console.log(\"resp_age=\" +resp_f.age)\r",
									"//console.log(\"resp_age=\" + typeof resp_age)\r",
									"//console.log(\"resp_name=\", resp_name)\r",
									"//console.log(\"resp_salary=\" + resp_salary)\r",
									"\r",
									"//Статус код 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check_name_manual\", function() {\r",
									"     pm.expect(resp_name).to.eql(\"Elena\")\r",
									"});\r",
									"pm.test(\"Check_name\", function () {\r",
									"    pm.expect(req_name).to.eql(resp_name);\r",
									"});\r",
									"\r",
									"pm.test(\"Check_age_manual\", function() {\r",
									"     pm.expect(req_age).to.eql(31)\r",
									"});\r",
									"pm.test(\"Check_age\", function () {\r",
									"    pm.expect(req_age).to.eql(resp_age);\r",
									"});\r",
									"\r",
									"pm.test(\"Check_salary_manual\", function () {\r",
									"    pm.expect(req_salary).to.eql(1000);\r",
									"});\r",
									"pm.test(\"Check_salary\", function () {\r",
									"    pm.expect(req_salary).to.eql(resp_salary);\r",
									"});\r",
									"\r",
									"pm.test(\"Check_salary_1_5_year\", function () {\r",
									"    pm.expect(req_salary*4).to.eql(resp_salary_1_5_year);\r",
									"});\r",
									"//Вывести в консоль параметр family из response.\r",
									"let resp_family = resp_f.family;\r",
									"console.log(resp_family)\r",
									"//console.log(\"resp_age=\" + typeof resp_age)\r",
									"//console.log(\"resp_name=\", resp_name)\r",
									"//console.log(\"resp_salary=\" + resp_salary)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Elena",
									"type": "text"
								},
								{
									"key": "age",
									"value": "31",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "1000",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{ip_port}}/user_info_3",
							"host": [
								"{{ip_port}}"
							],
							"path": [
								"user_info_3"
							]
						}
					},
					"response": []
				},
				{
					"name": "/object_info_3tests",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Статус код 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"//Спарсить данные для метода GET\r",
									"let resp_f = pm.response.json();\r",
									"let req_f = pm.request.url.query.toObject();\r",
									"\r",
									"let req_name = req_f.name\r",
									"let resp_name =  resp_f.name\r",
									"let req_age = req_f.age\r",
									"let resp_age =  resp_f.age\r",
									"let req_salary = +req_f.salary\r",
									"let resp_salary = +resp_f.salary\r",
									"\r",
									"pm.test(\"Check_name\", function () {\r",
									"    pm.expect(req_name).to.eql(resp_name);\r",
									"});\r",
									"pm.test(\"Check_age\", function () {\r",
									"    pm.expect(req_age).to.eql(resp_age);\r",
									"});\r",
									"pm.test(\"Check_salary\", function () {\r",
									"    pm.expect(req_salary).to.eql(resp_salary);\r",
									"});\r",
									"\r",
									"let resp_family = resp_f.family;\r",
									"console.log(resp_family)\r",
									"//у параметра dog есть параметры name\r",
									"let name_p = resp_f.family.pets.dog\r",
									"console.log(resp_f.family.pets.dog)\r",
									"pm.test(\"Check_name_p\", function () {\r",
									"    pm.expect(resp_f.family.pets.dog).to.have.property(\"name\");\r",
									"});\r",
									"//у параметра dog есть параметры age\r",
									"pm.test(\"Check_age_p\", function () {\r",
									"    pm.expect(resp_f.family.pets.dog).to.have.property(\"age\");\r",
									"});\r",
									"//параметр name имеет значение Luky\r",
									"let dog_name = resp_f.family.pets.dog.name\r",
									"pm.test(\"Check_dog_name\", function () {\r",
									"    pm.expect(dog_name).to.eql(\"Luky\");\r",
									"});\r",
									"//параметр age имеет значение 4\r",
									"let dog_age = +resp_f.family.pets.dog.age\r",
									"pm.test(\"Check_dog_age\", function () {\r",
									"    pm.expect(dog_age).to.eql(4);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Elena",
									"type": "text",
									"disabled": true
								},
								{
									"key": "age",
									"value": "31",
									"type": "text",
									"disabled": true
								},
								{
									"key": "salary",
									"value": "10",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{ip_port}}/object_info_3?name={{name}}&age={{age}}&salary={{salary}}",
							"host": [
								"{{ip_port}}"
							],
							"path": [
								"object_info_3"
							],
							"query": [
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "age",
									"value": "{{age}}"
								},
								{
									"key": "salary",
									"value": "{{salary}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/object_info_4tests",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"//Переменные\r",
									"let resp_f = pm.response.json();\r",
									"let req_f = pm.request.url.query.toObject();\r",
									"let req_name = req_f.name\r",
									"let resp_name =  resp_f.name\r",
									"let req_age= + req_f.age \r",
									"let resp_age= + resp_f.age\r",
									"let req_salary= + req_f.salary\r",
									"let resp_salary= +resp_f.salary\r",
									"//Тесты\r",
									"pm.test(\"Check_name\", function () {\r",
									"    pm.expect(req_name).to.eql(resp_name);\r",
									"});\r",
									"pm.test(\"Check_age\", function () {\r",
									"    pm.expect(req_age).to.eql(resp_age);\r",
									"});\r",
									"pm.test(\"Check_salary_0\", function () {\r",
									"    pm.expect(req_salary).to.eql(+resp_f.salary[0]);\r",
									"});\r",
									"pm.test(\"Check_salary_1\", function () {\r",
									"    pm.expect(req_salary*2).to.eql(+resp_f.salary[1]);\r",
									"})\r",
									"pm.test(\"Check_salary_2\", function () {\r",
									"    pm.expect(req_salary*3).to.eql(+resp_f.salary[2]);\r",
									"})\r",
									"console.log(\"req_age=\" +req_age)\r",
									"console.log(\"resp_age=\" +resp_age)\r",
									"//0-й,1-й, 2-й элементы параметра salary из response\r",
									"//console.log(\"0 element=\" +resp_f.salary[0])\r",
									"//console.log(\"1 element=\" +resp_f.salary[1])\r",
									"//console.log(\"2 element=\" +resp_f.salary[2])\r",
									"\r",
									"for(let i=0; i < 3; i++){\r",
									"    console.log(i, +resp_f.salary[i]);\r",
									"};"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{ip_port}}/object_info_4?name={{name}}&age={{age}}&salary={{salary}}",
							"host": [
								"{{ip_port}}"
							],
							"path": [
								"object_info_4"
							],
							"query": [
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "age",
									"value": "{{age}}"
								},
								{
									"key": "salary",
									"value": "{{salary}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/user_info_2tests",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"name\", \"elle_danili\");\r",
									"pm.environment.set(\"age\", \"30\");\r",
									"pm.environment.set(\"salary\", \"1500\");\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"let req_f=request.data;\r",
									"let resp_f = pm.response.json();\r",
									"let req_name = req_f.name\r",
									"let resp_name =  resp_f.name\r",
									"let req_age= + req_f.age \r",
									"let resp_age= + resp_f.age \r",
									"let req_salary= +req_f.salary\r",
									"let resp_salary= +resp_f.start_qa_salary\r",
									"let qa_salary_after_6_months = resp_f.qa_salary_after_6_months;\r",
									"let qa_salary_after_12_months = resp_f.qa_salary_after_12_months;\r",
									"let qa_salary_after_1_5year = resp_f[\"qa_salary_after_1.5_year\"];\r",
									"let qa_salary_after_3_5years = resp_f[\"qa_salary_after_3.5_years\"];\r",
									"let qa_person = resp_f.person;\r",
									"pm.test(\"Check_start_salary\", function () {\r",
									"    pm.expect(resp_f).to.have.property(\"start_qa_salary\");\r",
									"});\r",
									"pm.test(\"Check_qa_salary_after_6_months\", function () {\r",
									"    pm.expect(resp_f).to.have.property(\"qa_salary_after_6_months\");\r",
									"});\r",
									"pm.test(\"Check_qa_salary_after_12_months\", function () {\r",
									"    pm.expect(resp_f).to.have.property(\"qa_salary_after_12_months\");\r",
									"});\r",
									"pm.test(\"Check_qa_salary_after_1.5_year\", function () {\r",
									"    pm.expect(resp_f).to.have.property(\"qa_salary_after_1.5_year\");\r",
									"});\r",
									"pm.test(\"Check_qa_salary_after_3.5_years\", function () {\r",
									"    pm.expect(resp_f).to.have.property(\"qa_salary_after_3.5_years\");\r",
									"});\r",
									"pm.test(\"Check_person\", function () {\r",
									"    pm.expect(resp_f).to.have.property(\"person\");\r",
									"});\r",
									"pm.test(\"Check_start_qa_salary\", function () {\r",
									"    pm.expect(req_salary).to.eql(resp_salary);\r",
									"});\r",
									"pm.test(\"Check_6_months_salary\", function () {\r",
									"    pm.expect(req_salary*2).to.eql(qa_salary_after_6_months);\r",
									"});\r",
									"pm.test(\"Check_12_month_salary\", function () {\r",
									"    pm.expect(req_salary*2.7).to.eql(qa_salary_after_12_months);\r",
									"});\r",
									"pm.test(\"Check_1_5year_salary\", function () {\r",
									"    pm.expect(req_salary*3.3).to.eql(qa_salary_after_1_5year);\r",
									"});\r",
									"pm.test(\"Check_3_5year_salary\", function () {\r",
									"    pm.expect(req_salary*3.8).to.eql(qa_salary_after_3_5years);\r",
									"});\r",
									"pm.test(\"Check_u_salary\", function () {\r",
									"    pm.expect(req_salary).to.eql(resp_f.person.u_name[1]);\r",
									"});\r",
									"pm.test(\"Check_u_age\", function () {\r",
									"    pm.expect(req_age).to.eql(resp_f.person.u_age);\r",
									"});\r",
									"let u_salary_5_years = +resp_f.person.u_salary_5_years\r",
									"pm.test(\"Check_u_salary_5_years\", function () {\r",
									"    pm.expect(req_salary*4.2).to.eql(u_salary_5_years);\r",
									"});\r",
									"\r",
									"console.log(resp_f.person);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "{{name}}",
									"type": "text"
								},
								{
									"key": "age",
									"value": "{{age}}",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "{{salary}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{ip_port}}/user_info_2",
							"host": [
								"{{ip_port}}"
							],
							"path": [
								"user_info_2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "get_method",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ip_port}}/get_method?name=Str&age=Str",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"get_method"
					],
					"query": [
						{
							"key": "name",
							"value": "Str"
						},
						{
							"key": "age",
							"value": "Str"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Elena",
							"type": "text"
						},
						{
							"key": "age",
							"value": "31",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "111",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{ip_port}}/user_info_3",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_1",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ip_port}}/object_info_1?name=Elena&age=31&weight=59",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"object_info_1"
					],
					"query": [
						{
							"key": "name",
							"value": "Elena"
						},
						{
							"key": "age",
							"value": "31"
						},
						{
							"key": "weight",
							"value": "59"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_2",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ip_port}}/object_info_2?name=Elena&age=31&salary=10000",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"object_info_2"
					],
					"query": [
						{
							"key": "name",
							"value": "Elena"
						},
						{
							"key": "age",
							"value": "31"
						},
						{
							"key": "salary",
							"value": "10000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_3",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Elena",
							"type": "text",
							"disabled": true
						},
						{
							"key": "age",
							"value": "31",
							"type": "text",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "10",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{ip_port}}/object_info_3?name=Elena&age=31&salary=10",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Elena"
						},
						{
							"key": "age",
							"value": "31"
						},
						{
							"key": "salary",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_4",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{ip_port}}/object_info_4?name=Elena&age=31&salary=100",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Elena"
						},
						{
							"key": "age",
							"value": "31"
						},
						{
							"key": "salary",
							"value": "100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info_2",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Elena",
							"type": "text"
						},
						{
							"key": "age",
							"value": "31",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{ip_port}}/user_info_2",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}